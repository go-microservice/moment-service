// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/go-eagle/eagle/pkg/app"
	"github.com/go-microservice/moment-service/internal/cache"
	"github.com/go-microservice/moment-service/internal/model"
	"github.com/go-microservice/moment-service/internal/repository"
	"github.com/go-microservice/moment-service/internal/server"
	"github.com/go-microservice/moment-service/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func InitApp(cfg *app.Config, config *app.ServerConfig) (*app.App, error) {
	db := model.Init()
	postInfoCache := cache.NewPostInfoCache()
	postInfoRepo := repository.NewPostInfo(db, postInfoCache)
	postLatestRepo := repository.NewPostLatest(db)
	postHotRepo := repository.NewPostHot(db)
	userPostRepo := repository.NewUserPost(db)
	postServiceServer := service.NewPostServiceServer(postInfoRepo, postLatestRepo, postHotRepo, userPostRepo)
	commentInfoCache := cache.NewCommentInfoCache()
	commentInfoRepo := repository.NewCommentInfo(db, commentInfoCache)
	commentContentCache := cache.NewCommentContentCache()
	commentContentRepo := repository.NewCommentContent(db, commentContentCache)
	commentServiceServer := service.NewCommentServiceServer(commentInfoRepo, commentContentRepo)
	grpcServer := server.NewGRPCServer(config, postServiceServer, commentServiceServer)
	appApp := newApp(cfg, grpcServer)
	return appApp, nil
}
