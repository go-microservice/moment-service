syntax = "proto3";

package api.moment.v1;

option go_package = "github.com/go-microservice/moment-service/api/moment/v1;v1";
option java_multiple_files = true;
option java_package = "api.moment.v1";

service CommentService {
	// 发布评论
	rpc CreateComment (CreateCommentRequest) returns (CreateCommentReply);
	// 更新评论
	rpc UpdateComment (UpdateCommentRequest) returns (UpdateCommentReply);
	// 删除评论
	rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentReply);
	// 回复评论
	rpc ReplyComment (ReplyCommentRequest) returns (ReplyCommentReply);
	// 获取评论
	rpc GetComment (GetCommentRequest) returns (GetCommentReply);
	// 批量获取评论
	rpc BatchGetComments(BatchGetCommentsRequest) returns (BatchGetCommentsReply);
	// 热门评论列表
	rpc ListHotComments (ListCommentsRequest) returns (ListCommentsReply);
	// 最新评论列表
	rpc ListLatestComments (ListCommentsRequest) returns (ListCommentsReply);
	// 评论回复列表
	rpc ListReplyComments (ListReplyCommentsRequest) returns (ListReplyCommentsReply);
}

message Comment {
	int64 id = 1;
	int64 post_id = 2;
	int64 user_id = 3;
	string content = 4;
	int64 root_id = 5;
	int64 parent_id = 6;
	int32 like_count = 7;
	int32 reply_count = 8;
	int64 score = 9;
	int32 del_flag = 10;
	string created_at = 11;
	string updated_at = 12;
	string device_type = 13;
	string ip = 14;
}

message CreateCommentRequest {
	int64 post_id = 1;
	int64 user_id = 2;
	string content = 3;
	int64 root_id = 4;
	int64 parent_id = 5;
	string device_type = 6;
	string ip = 7;
}
message CreateCommentReply {
	Comment comment = 1;
}

message UpdateCommentRequest {}
message UpdateCommentReply {}

message DeleteCommentRequest {
	int64 id = 1;
	int64 user_id = 2;
	int32 del_flag = 3;
}
message DeleteCommentReply {}

message ReplyCommentRequest {
	int64 comment_id = 1;
	int64 user_id = 2;
	string content = 3;
	int64 root_id = 4;
	int64 parent_id = 5;
	string device_type = 6;
	string ip = 7;
}
message ReplyCommentReply {
	Comment comment = 1;
}

message GetCommentRequest {
	int64 id = 1;
}
message GetCommentReply {
	Comment comment = 1;
}

message BatchGetCommentsRequest {
	repeated int64 ids = 1;
}
message BatchGetCommentsReply {
	repeated Comment comments = 1;
}

// 评论列表请求参数
message ListCommentsRequest {
	// 帖子id
	int64 post_id = 1;
	// 每页数量
	int32 page_size = 2;
	// 分页token
	int64 page_token = 3;
}

// 评论列表响应
message ListCommentsReply {
	repeated Comment items = 1;
	int64 count = 2;
	// 下一次请求用到的token, 如果为空说明没有下一页
	int64 next_page_token = 3;
}

// 评论的回复列表请求参数
message ListReplyCommentsRequest {
	int64 comment_id = 1;
	// 每页数量
	int32 page_size = 2;
	// 分页token
	int64 page_token = 3;
}

// 评论的回复列表响应
message ListReplyCommentsReply {
	repeated Comment items = 1;
	int64 count = 2;
	// 下一次请求用到的token, 如果为空说明没有下一页
	int64 next_page_token = 3;
}
