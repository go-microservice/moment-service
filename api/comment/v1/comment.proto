syntax = "proto3";

package api.comment.v1;

option go_package = "github.com/go-microservice/moment-service/api/comment/v1;v1";
option java_multiple_files = true;
option java_package = "api.comment.v1";

service CommentService {
	rpc CreateComment (CreateCommentRequest) returns (CreateCommentReply);
	rpc UpdateComment (UpdateCommentRequest) returns (UpdateCommentReply);
	rpc DeleteComment (DeleteCommentRequest) returns (DeleteCommentReply);
	rpc GetComment (GetCommentRequest) returns (GetCommentReply);
	rpc BatchGetComment(BatchGetCommentRequest) returns (BatchGetCommentReply);
	rpc ListComment (ListCommentRequest) returns (ListCommentReply);
}

message Comment {
	int64 id = 1;
	int32 obj_type = 2;
	int64 obj_id = 3;
	int64 user_id = 4;
	string content = 5;
	int64 root_id = 6;
	int64 parent_id = 7;
	int32 like_count = 8;
	int32 reply_count = 9;
	int64 score = 10;
	int32 del_flag = 11;
	string created_at = 12;
	string updated_at = 13;
	string device_type = 14;
	string ip = 15;
}

message CreateCommentRequest {
	int64 id = 1;
	int32 obj_type = 2;
	int64 obj_id = 3;
	int64 user_id = 4;
	string content = 5;
	int64 root_id = 6;
	int64 parent_id = 7;
	int32 like_count = 8;
	int32 reply_count = 9;
	int32 del_flag = 10;
	string device_type = 11;
	string ip = 12;
}
message CreateCommentReply {
	Comment comment = 1;
}

message UpdateCommentRequest {}
message UpdateCommentReply {}

message DeleteCommentRequest {
	int64 id = 1;
	int64 user_id = 2;
	int32 del_flag = 3;
}
message DeleteCommentReply {}

message GetCommentRequest {
	int64 id = 1;
}
message GetCommentReply {
	Comment comment = 1;
}

message BatchGetCommentRequest {
	repeated int64 ids = 1;
}
message BatchGetCommentReply {
	repeated Comment comments = 1;
}

message ListCommentRequest {
	int64 last_id = 1;
	int32 limit = 2;
}
message ListCommentReply {
	repeated Comment items = 1;
	int64 count = 2;
	bool has_more = 3;
	int64 last_id = 4;
}
